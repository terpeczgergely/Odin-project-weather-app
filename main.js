(()=>{let e="Budapest",n=!0;const t=document.getElementById("weather-type"),r=document.getElementById("weather-location"),o=document.getElementById("weather-location-time"),i=document.getElementById("weather-degree"),c=document.getElementById("weather-degree-display"),a=document.getElementById("weather-type-icon"),d=document.getElementById("feelslike-degree"),l=document.getElementById("humidity-percentage"),m=document.getElementById("wind-direction-value"),u=document.getElementById("wind-speed-value"),s=document.getElementById("search-location"),h=document.getElementById("error");async function p(){try{const s=await fetch(`https://api.weatherapi.com/v1/current.json?key=81dee91ab1544b219b0214517240503&q=${e}`,{method:"GET",mode:"cors",headers:{"Content-Type":"application/json"}});if(!e)throw new Error("No location specified");if(!s.ok)throw h.innerHTML="Location was not found!",new Error("Network response was not ok");const p=await s.json();let w=p.current.condition.text;return t.innerHTML=w,r.innerHTML=`${p.location.name}, ${p.location.country}`,o.innerHTML=`${p.location.localtime}`,n?(i.innerHTML=`${p.current.temp_c} C°`,c.innerHTML="Displaying temperature in C° <br> (click on degree to change)",d.innerHTML=`${p.current.feelslike_c} C°`):(i.innerHTML=`${p.current.temp_f} F°`,c.innerHTML="Displaying temperature in F° <br> (click on degree to change)",d.innerHTML=`${p.current.feelslike_f} F°`),a.src=`https:${p.current.condition.icon}`,a.alt=w,l.innerHTML=`${p.current.humidity} %`,m.innerHTML=`${p.current.wind_dir} `,u.innerHTML=`${p.current.wind_kph} km/h`,p}catch(e){throw console.error("There was a problem with the fetch operation:",e),e}}s.addEventListener("blur",(function(){e=this.value,function(e){return!!e}(e)?(h.innerHTML="",p()):(h.innerHTML="Location was not provided!",console.log("Failed to fetch weather, because location is missing"))})),p(),i.addEventListener("click",(()=>{n=!n,p()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,